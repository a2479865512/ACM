#include<cstdio>
#include<algorithm>
#include<cmath>
#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e5 + 5;
int  a[MAXN];
vector<int>edge[MAXN];
void dfs(int x, int o)
{
	a[x] = o;
	for (int i = 0; i < edge[x].size(); i++)
		dfs(edge[x][i], o + 1);
}
int main()
{

	int n, k, x, s;
	cin >> n;
	s = (n + 1)*n / 2;
	for (int i = 1; i <= n; i++)
	{
		cin >> k;
		while (k--)
		{
			cin >> x;
			s -= x;
			edge[i].push_back(x);
		}
	}
	dfs(s, 1);
	s = 0;
	for (int i = 1; i <= n; i++)
		if (a[s] < a[i])
			s = i;
	cout << s << endl;
	return 0;
}

13
3 2 3 4
2 5 6
1 7
1 8
1 9
0
2 11 10
1 13
0
0
1 12
0
0