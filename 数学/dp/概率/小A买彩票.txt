#include<bits/stdc++.h>
#include<cstdio>
using namespace std;
const int MAXN = 1e5 + 5;
const int MOD = 1e9 + 7;
long long n, m, a;
long long dp[31][125];
long long gcd(long long x, long long y)
{
	return (x%y == 0) ? y : gcd(y, x%y);
}
int main()
{
	cin >> n;
	long long sum = 4;
	memset(dp, 0, sizeof(dp));
	dp[1][1] = dp[1][2] = dp[1][3] = dp[1][4] = 1;
	for (int i = 2; i <= n; i++)
	{
		sum *= 4;
		for (int j = 1; j <= 4 * (i - 1); j++)
			for (int k = 1; k <= 4; k++)
				dp[i][j + k] += dp[i - 1][j];
		//for(int j=1;j<=4*i;j++)
		//    cout<<dp[i][j]<<' ';
		//cout<<endl;
	}
	long long s = 0;
	for (int i = 3 * n; i <= 4 * n; i++)
		s += dp[n][i];
	long long  g = gcd(s, sum);
	//cout<<s<<' '<<sum<<' '<<g<<endl;
	s /= g; sum /= g;
	if (s == sum)cout << "0/1" << endl;
	else if (s == 0)cout << "1/1" << endl;
	else printf("%lld/%lld\n", s, sum);
	return 0;
}


2