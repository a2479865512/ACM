/*
a * x + b * y = gcd(a,b);
a * x + m * y = 1 = gcd(a,b);
x = a^-1

*/

·ÇµÝ¹é
ll extend_gcd(ll a, ll b, ll &x, ll &y) {
	if (b == 0) {
		x = 1, y = 0;
		return a;
	}
	else {
		ll r = extend_gcd(b, a % b, y, x);
		y -= x * (a / b);
		return r;
	}
}
ll inv(ll a, ll n) {
	ll x, y;
	extend_gcd(a, n, x, y);
	x = (x % n + n) % n;
	return x;
}

int exgcd(int m, int n, int &x, int &y) {
	if (n == 0) {
		x = 1; y = 0;
		return m;
	}
	int a, a1, b, b1, c, d, q, r, t;
	a1 = b = 1;
	a = b1 = 0;
	c = m; d = n;

	q = c / d; r = c % d;
	while (r) {
		c = d;
		d = r;
		t = a1;
		a1 = a;
		a = t - q * a;
		t = b1;
		b1 = b;
		b = t - q * b;

		q = c / d;
		r = c % d;
	}
	x = a; y = b;
	return d;
}



µÝ¹é
void gcd(LL a, LL b, LL &d, LL &x, LL &y)
{
	if (!b) { d = a; x = 1; y = 0; }
	else { gcd(b, a%b, d, y, x); y -= x * (a / b); }
}
LL finv(LL a, LL n)
{
	LL d, x, y;
	gcd(a, n, d, x, y);
	return d == 1 ? (x + n) % n : -1;
}