
//就是已知m1, m2, m3是两两互质的正整数，求最小的正整数x，使它被m1, m2, m3除所得的余数分别是c1, c2, c3。孙子定理的思想便是线分别求出被其中数mi整除余1而被另外两个数整除的数Mi(i = 1, 2, 3)，则所求数之一的便是c1M1 + c2M2 + c3M3。
/*long long gcd(LL a,LL b)
{
	return b == 0 ? a : gcd(b,a%b);
}*/
#include<cstdio>
#define ll long long
//扩展欧几里得算法 
void gcd(ll a, ll b, ll &d, ll &x, ll &y)
{
	if (b == 0) {
		d = a;
		x = 1, y = 0;
	}
	else {//else不能省略 
		gcd(b, a%b, d, y, x);
		y -= (a / b)*x;
	}
}
//中国剩余定理 
ll China(int n, ll *m, ll *a)
{
	ll M = 1, d, y, x = 0;
	for (int i = 0; i < n; i++) M *= m[i];
	for (int i = 0; i < n; i++) {
		ll w = M / m[i];
		gcd(m[i], w, d, d, y);
		x = (x + y * w*a[i]) % M;//y是乘法逆元 
	}
	return (x + M) % M;
}
ll m[15], a[15];
int main()
{
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%lld%lld", &m[i], &a[i]);
	printf("%lld", China(n, m, a));
}