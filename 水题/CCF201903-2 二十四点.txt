#include<iostream>
using namespace std;

char a[10];
int b[10];
int main()
{
	int n, k = 0;
	cin >> n;
	while (n--)
	{
		cin >> a;
		int i;
		for (i = 0; i < 7; i += 2)
		{
			b[i] = a[i] - '0';
		}
		for (i = 1; i < 7; i += 2)//扫乘除
		{
			if (a[i] == 'x')
			{
				b[i + 1] = b[i - 1] * b[i + 1];//B位置保存A*B
				if (i == 1)//符号用上一个代替
					a[i] = '+';
				else
					a[i] = a[i - 2];
				b[i - 1] = 0;//A位置 置0
			}
			else if (a[i] == '/')
			{
				b[i + 1] = b[i - 1] / b[i + 1];
				if (i == 1)
					a[i] = '+';
				else
					a[i] = a[i - 2];
				b[i - 1] = 0;
			}
		}
		for (i = 1; i < 7; i += 2)//扫一遍加减
		{
			if (a[i] == '+')
				b[0] += b[i + 1];
			else if (a[i] == '-')
				b[0] -= b[i + 1];
		}
		if (b[0] == 24)//判断答案
			cout << "Yes" << endl;
		else
			cout << "No" << endl;
	}
	return 0;
}


/************************
//方法二
//更一般的解法，中缀表达式转后缀表达式（波兰表达式）后，从左到右计算
//转换波兰表达式的过程中就可以计算了
************************/
#include<iostream>
#include<algorithm>
#include<string>
#include<stack>
#include<queue>
#include<map>

using namespace std;

map<char, int>mp;//符号优先级
stack<char>sign;//符号栈
stack<int>num;//数据栈 可以数组实现，取数方便点
string s;//表达式串
//计算函数
void Calculate() {
	char c = sign.top(); sign.pop();
	int a, b = num.top(); num.pop();
	a = num.top(); num.pop();
	if (c == 'x') num.push(a*b);
	else if (c == '/') num.push(a / b);
	else if (c == '+') num.push(a + b);
	else if (c == '-') num.push(a - b);
}

int main() {
	int n;
	//设置优先级
	mp['x'] = mp['/'] = 0;
	mp['+'] = mp['-'] = 1;
	cin >> n;
	while (n--) {
		cin >> s;
		int len = s.size();
		for (int i = 0; i < len; ++i) {
			if (s[i] < 48 || s[i] > 57) {
				while (!sign.empty() && mp[sign.top()] <= mp[s[i]]) Calculate();
				sign.push(s[i]);
			}
			else num.push(s[i] - '0');
		}
		//把栈中表达式算完
		while (!sign.empty()) Calculate();
		//cout << (num.top()) << endl;
		if (num.top() == 24) cout << "Yes" << endl;
		else cout << "No" << endl;
		num.pop();
	}
	return 0;
}

/*
10
9+3+4x3
5+4x5x5
7-9-9+8
5x6/5x4
3+5+7+9
1x1+9-9
1x9-5/9
8/5+6x9
6x7-3x6
6x4+4/5
*/
