#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

typedef long long LL;

const int N = 10000005;
const int MOD = 1000000007;

int n, ny[N], jc[N], f[N];

int C(int n, int m)
{
	return (LL)jc[n] * ny[m] % MOD*ny[n - m] % MOD;
}

int main()
{
	scanf("%d", &n);
	jc[0] = jc[1] = ny[0] = ny[1] = 1;
	for (int i = 2; i <= n; i++) jc[i] = (LL)jc[i - 1] * i%MOD, ny[i] = (LL)(MOD - MOD / i)*ny[MOD%i] % MOD;
	for (int i = 2; i <= n; i++) ny[i] = (LL)ny[i - 1] * ny[i] % MOD;
	f[0] = 1; f[1] = 2;
	for (int i = 2; i <= n; i++) f[i] = ((LL)f[i - 1] * i * 2 % MOD - (LL)f[i - 2] * (i - 1) % MOD*(i - 1) % MOD) % MOD;
	int ans = 0;
	for (int i = 0; i <= n; i++)
		if (i & 1) (ans -= (LL)C(n, i)*C(n, i) % MOD*jc[i] % MOD*f[n - i] % MOD*f[n - i] % MOD) %= MOD;
		else (ans += (LL)C(n, i)*C(n, i) % MOD*jc[i] % MOD*f[n - i] % MOD*f[n - i] % MOD) %= MOD;
	printf("%d", (ans + MOD) % MOD);
	return 0;
}