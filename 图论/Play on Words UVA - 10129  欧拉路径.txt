#include<cstdio>
#include<vector>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<string>
using namespace std;

const int MAXN = 30;
char c[1005];
int fa[MAXN];
int findfa(int h) {
	if (h != fa[h])
		return fa[h] = findfa(fa[h]);
	return h;
}
int id[MAXN];
int od[MAXN];
int vis[MAXN];

void gotoone(int a, int b) {
	int q = findfa(a);
	int p = findfa(b);
	if (q != p)
		fa[q] = p;
	return;
}


int main()
{
	int T, n;
	cin >> T;
	while (T--) {
		memset(vis, 0, sizeof(vis));
		memset(id, 0, sizeof(id));
		memset(od, 0, sizeof(od));
		for (int i = 0; i < 26; ++i) {
			fa[i] = i;
		}
		cin >> n;
		while (n--) {
			cin >> c;
			int len = strlen(c);
			int u = c[0] - 'a';
			int v = c[len - 1] - 'a';
			gotoone(u, v);
			id[u]++;
			od[v]++;
			vis[u] = vis[v] = 1;
		}
		int flag = 0, tag = 0, a = 0, b = 0;
		for (int i = 0; i < 26; i++)
			if (vis[i] && fa[i] == i)
				flag++;//为1表示有一个唯一的祖先
		if (flag > 1) {
			cout << "The door cannot be opened." << endl;
		}
		else {
			for (int i = 0; i < 26; i++) {
				if (vis[i] && id[i] != od[i]) {
					tag++;
					if (id[i] - od[i] == 1) {
						a++;
					}
					else if (od[i] - id[i] == 1) {
						b++;
					}
				}
			}
			if (tag == 0) {
				cout << "Ordering is possible." << endl;
			}
			else if (a == 1 && b == 1 && tag == 2) {
				cout << "Ordering is possible." << endl;
			}
			else {
				cout << "The door cannot be opened." << endl;
			}
		}
	}
	return 0;
}




3
2
acm
ibm
3
acm
malform
mouse
2
ok
ok