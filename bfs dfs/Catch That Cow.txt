#include <iostream>
#include<cstdio>
#include<algorithm>
#include <queue>
using namespace std;
int n, k;
struct  Node
{
	int x;
	int y;
}pos, q;
int vis[200005];
int  bfs()
{
	queue<Node>que;
	if (n == k) return 0;
	pos.x = n;
	pos.y = 0;
	vis[n] = 1;
	que.push(pos);
	while (!que.empty())
	{
		pos = que.front();
		que.pop();
		q.y = pos.y + 1;
		q.x = pos.x * 2;
		if (q.x == k)return q.y;
		if (!vis[q.x] && q.x <= 100000)
		{
			vis[q.x] = 1;
			que.push(q);
		}
		q.x = pos.x + 1;
		if (q.x == k)return q.y;
		if (!vis[q.x] && q.x <= 100000)
		{
			vis[q.x] = 1;
			que.push(q);
		}
		q.x = pos.x - 1;
		if (q.x == k)return q.y;
		if (!vis[q.x] && q.x >= 0)
		{
			vis[q.x] = 1;
			que.push(q);
		}
	}
	return 0;
}
int main()
{
	scanf("%d %d", &n, &k);
	cout << bfs() << endl;
	return 0;
}

5 17