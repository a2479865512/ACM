#include"cstdio"
#include"cstring"
#include"iostream"
using namespace std;
int c1[1000001], c2[10001];
int next1[10001];
int len1, len2;
void getNext(int *p) {
	next1[0] = -1;
	int j = 0;
	int k = -1;
	while (j < len2) {
		if (k == -1 || p[j] == p[k]) {
			if (p[++j] == p[++k]) { // 当两个字符相等时要跳过
				next1[j] = next1[k];
			}
			else {
				next1[j] = k;
			}
		}
		else {
			k = next1[k];//这相当于一个递推的优化
		}
	}
}
int KMP(int *S, int *P)
{
	int i = 0;  // S 的下标
	int j = 0;  // P 的下标
	while (i < len1 && j < len2)
	{
		if (j == -1 || S[i] == P[j])  // P 的第一个字符不匹配或 S[i] == P[j]
		{
			i++;
			j++;
		}
		else
			j = next1[j];  // 当前字符匹配失败，进行跳转
	}
	if (j == len2)// 匹配成功
	{
		return i - j + 1;//完全匹配时的开始下标，下标从1开始
	}
	return -1;//不存在匹配情况 
}
int main()
{
	int t;
	cin >> t;
	while (t--) {
		cin >> len1 >> len2;
		for (int i = 0; i < len1; i++) {
			scanf("%d", &c1[i]);
		}
		for (int i = 0; i < len2; i++) {
			scanf("%d", &c2[i]);
		}
		getNext(c2);
		printf("%d\n", KMP(c1, c2));
	}

	return 0;
}



2
13 5
1 2 1 2 3 1 2 3 1 3 2 1 2
1 2 3 1 3
13 5
1 2 1 2 3 1 2 3 1 3 2 1 2
1 2 3 2 1