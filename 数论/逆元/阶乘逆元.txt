inv[maxn] = mod_pow(fac[maxn], mod - 2);//阶乘数组fac
for (ll i = maxn - 1; i >= 0; i--)
	inv[i] = (inv[i + 1] * (i + 1)) % mod;


long long quickpow(long long a, long long b) {
	if (b < 0) return 0;
	long long ret = 1;
	a %= MOD;
	while (b) {
		if (b & 1) ret = (ret * a) % MOD;
		b >>= 1;
		a = (a * a) % MOD;
	}
	return ret;
}
long long inv(long long a) {
	return quickpow(a, MOD - 2);
}
ll inv1[MAXN];
ll fac[MAXN];
void init()
{
	fac[0] = 1;
	for (int i = 1; i < MAXN; i++) { fac[i] = fac[i - 1] * i%MOD; }
	inv1[MAXN-1] = quickpow(fac[MAXN-1], MOD - 2);//阶乘数组fac
	for (ll i = MAXN - 2; i >= 0; i--)
	{
	    inv1[i] = (inv1[i + 1] * (i + 1)) % MOD;
	}
}